{"version":3,"sources":["webpack:///./src/pages/auth/RegisterPage.jsx"],"names":["PAGE_NAME","ContentSeagment","classes","authInfo","setUsername","setPassword","togglePasswordVisibility","textField","username","event","target","value","endAdornment","isPasswordVisible","propTypes","PropTypes","object","isRequired","func","StyledContent","withStyles","styles","mapStateToContentProps","state","getAuthInfoSelector","mapDispatchToContentProps","dispatch","setUsernameActionCreator","password","setPasswordActionCreator","isVisible","setPasswordVisibilityActionCreator","Content","connect","ButtonsSeagment","handleRegister","button","defaultProps","StyledButtons","mapStateToButtonsProps","mapDispatchToButtonsProps","handleRegisterActionCreator","Buttons"],"mappings":"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","file":"rebind-app.71fac7f2ff346e841dd5.hot-update.js","sourcesContent":["/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Email from '@material-ui/icons/Email';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { getAuthInfoSelector } from '../../reducers/rootReducer';\r\nimport { \r\n  setUsernameActionCreator, \r\n  setPasswordActionCreator,\r\n  setPasswordVisibilityActionCreator,\r\n  handleRegisterActionCreator \r\n} from '../../reducers/auth/authActionCreators';\r\nimport styles from './RegisterPageStyles';\r\n/* eslint-enable */\r\n\r\nexport const PAGE_NAME = 'Sign up';\r\n\r\nconst ContentSeagment = ({\r\n  classes,\r\n  authInfo,\r\n  setUsername,\r\n  setPassword,\r\n  togglePasswordVisibility\r\n}) => (\r\n<DialogContent>\r\n    <DialogContentText>\r\n      to continue with ReBind.\r\n    </DialogContentText>\r\n    <br/>\r\n    <TextField\r\n      fullWidth\r\n      color=\"inherit\"\r\n      type=\"email\"\r\n      label=\"Email\"\r\n      placeholder=\"Enter your Email\"\r\n      className={classes.textField}\r\n      value={authInfo.username}\r\n      onChange={event => setUsername(event.target.value)}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <Email />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n    <br/>\r\n    <TextField\r\n      fullWidth\r\n      color=\"inherit\"\r\n      type={authInfo.isPasswordVisible ? 'text' : 'password'}\r\n      label=\"Password\"\r\n      placeholder=\"Enter your Password\"\r\n      className={classes.textField}\r\n      value={authInfo.username}\r\n      onChange={event => setPassword(event.target.value)}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              aria-label=\"Toggle password visibility\"\r\n              onClick={() => togglePasswordVisibility(!authInfo.isPasswordVisible)}\r\n            >\r\n              {authInfo.isPasswordVisible ? <Visibility /> : <VisibilityOff />}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        )\r\n      }}\r\n    />\r\n    <br/>\r\n</DialogContent>\r\n);\r\n\r\nContentSeagment.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  authInfo: PropTypes.object.isRequired,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  togglePasswordVisibility: PropTypes.func.isRequired\r\n};\r\n\r\nconst StyledContent = withStyles(styles)(ContentSeagment);\r\nconst mapStateToContentProps = state => ({\r\n  authInfo: getAuthInfoSelector(state)\r\n});\r\nconst mapDispatchToContentProps = dispatch => ({\r\n  setUsername: username => dispatch(setUsernameActionCreator(username)),\r\n  setPassword: password => dispatch(setPasswordActionCreator(password)),\r\n  togglePasswordVisibility: isVisible => dispatch(setPasswordVisibilityActionCreator(isVisible))\r\n});\r\nexport const Content = connect(\r\n  mapStateToContentProps,\r\n  mapDispatchToContentProps\r\n)(StyledContent);\r\n\r\n\r\nconst ButtonsSeagment = ({\r\n  authInfo,\r\n  classes,\r\n  handleRegister\r\n}) => (\r\n  <DialogActions>\r\n    <Button\r\n      label=\"Submit\"\r\n      style={styles}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n      onClick={() => handleRegister(authInfo)}\r\n    >\r\n      Register\r\n    </Button>\r\n  </DialogActions>\r\n);\r\n\r\nButtonsSeagment.defaultProps = {\r\n  authInfo: {\r\n    username: '',\r\n    password: ''\r\n  }\r\n};\r\n\r\nButtonsSeagment.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  authInfo: PropTypes.object,\r\n  handleRegister: PropTypes.func.isRequired\r\n};\r\n\r\nconst StyledButtons = withStyles(styles)(ButtonsSeagment);\r\n\r\nconst mapStateToButtonsProps = state => ({\r\n  authInfo: getAuthInfoSelector(state)\r\n});\r\nconst mapDispatchToButtonsProps = dispatch => ({\r\n  handleRegister: authInfo => dispatch(handleRegisterActionCreator(authInfo))\r\n});\r\n\r\nexport const Buttons = connect(\r\n  mapStateToButtonsProps,\r\n  mapDispatchToButtonsProps\r\n)(StyledButtons);\r\n\r\n// <div>\r\n// <Navigation />\r\n// <Card className={classes.root}>\r\n//   <TextField\r\n//     color=\"inherit\"\r\n//     type=\"email\"\r\n//     label=\"Email\"\r\n//     placeholder=\"Enter your Email\"\r\n//     className={classes.textField}\r\n//     onChange={event => setUsername(event.target.value)}\r\n//   />\r\n//   <br/>\r\n//   <TextField\r\n//     color=\"inherit\"\r\n//     type=\"password\"\r\n//     label=\"Password\"\r\n//     placeholder=\"Enter your Password\"\r\n//     className={classes.textField}\r\n//     onChange={event => setPassword(event.target.value)}\r\n//   />\r\n//   <br/>\r\n//   <Button\r\n//     label=\"Submit\"\r\n//     style={styles}\r\n//     variant=\"button\"\r\n//     color=\"primary\"\r\n//     className={classes.button}\r\n//     onClick={() => handleRegister(authInfo)}\r\n//   >\r\n//     Register\r\n//   </Button>\r\n// </Card>\r\n// </div>\r\n"],"sourceRoot":""}