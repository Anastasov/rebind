{"version":3,"sources":["webpack:///./src/pages/auth/RegisterPage.jsx"],"names":["RegisterPage","authInfo","classes","setUsername","setPassword","handleRegister","textField","event","target","value","styles","button","propTypes","PropTypes","object","isRequired","func","defaultProps","username","password","StyledRegisterPage","withStyles","mapStateToProps","state","getAuthInfoSelector","mapDispatchToProps","dispatch","setUsernameActionCreator","setPasswordActionCreator","handleRegisterActionCreator","ReduxRegisterPage","connect","REGISTER_PAGE_NAME"],"mappings":"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","file":"rebind-app.47ffa7ec5ebf366f4a0f.hot-update.js","sourcesContent":["/* eslint-disable */\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Navigation from '../../components/nav/Navigation';\r\nimport { getAuthInfoSelector } from '../../reducers/rootReducer';\r\nimport { \r\n  setUsernameActionCreator, \r\n  setPasswordActionCreator, \r\n  handleRegisterActionCreator \r\n} from '../../reducers/auth/authActionCreators';\r\nimport styles from './RegisterPageStyles';\r\n/* eslint-enable */\r\n\r\nconst RegisterPage = ({\r\n  authInfo,\r\n  classes,\r\n  setUsername,\r\n  setPassword,\r\n  handleRegister\r\n}) => (\r\n  <Fragment>\r\n<DialogContent>\r\n    <DialogContentText>\r\n      to enhance ReBind\r\n    </DialogContentText>\r\n    <TextField\r\n      color=\"inherit\"\r\n      type=\"email\"\r\n      label=\"Email\"\r\n      placeholder=\"Enter your Email\"\r\n      className={classes.textField}\r\n      onChange={event => setUsername(event.target.value)}\r\n    />\r\n    <br/>\r\n    <TextField\r\n      color=\"inherit\"\r\n      type=\"password\"\r\n      label=\"Password\"\r\n      placeholder=\"Enter your Password\"\r\n      className={classes.textField}\r\n      onChange={event => setPassword(event.target.value)}\r\n    />\r\n    <br/>\r\n  </DialogContent>\r\n  <DialogActions>\r\n    <Button\r\n      label=\"Submit\"\r\n      style={styles}\r\n      variant=\"button\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n      onClick={() => handleRegister(authInfo)}\r\n    >\r\n      Register\r\n    </Button>\r\n  </DialogActions>\r\n</Fragment>\r\n  // <div>\r\n  // <Navigation />\r\n  // <Card className={classes.root}>\r\n  //   <TextField\r\n  //     color=\"inherit\"\r\n  //     type=\"email\"\r\n  //     label=\"Email\"\r\n  //     placeholder=\"Enter your Email\"\r\n  //     className={classes.textField}\r\n  //     onChange={event => setUsername(event.target.value)}\r\n  //   />\r\n  //   <br/>\r\n  //   <TextField\r\n  //     color=\"inherit\"\r\n  //     type=\"password\"\r\n  //     label=\"Password\"\r\n  //     placeholder=\"Enter your Password\"\r\n  //     className={classes.textField}\r\n  //     onChange={event => setPassword(event.target.value)}\r\n  //   />\r\n  //   <br/>\r\n  //   <Button\r\n  //     label=\"Submit\"\r\n  //     style={styles}\r\n  //     variant=\"button\"\r\n  //     color=\"primary\"\r\n  //     className={classes.button}\r\n  //     onClick={() => handleRegister(authInfo)}\r\n  //   >\r\n  //     Register\r\n  //   </Button>\r\n  // </Card>\r\n  // </div>\r\n);\r\n\r\nRegisterPage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  authInfo: PropTypes.object,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  handleRegister: PropTypes.func.isRequired,\r\n};\r\n\r\nRegisterPage.defaultProps = {\r\n  authInfo: {\r\n    username: '',\r\n    password: ''\r\n  }\r\n};\r\n\r\nconst StyledRegisterPage = withStyles(styles)(RegisterPage);\r\n\r\nconst mapStateToProps = state => ({\r\n  authInfo: getAuthInfoSelector(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUsername: username => dispatch(setUsernameActionCreator(username)),\r\n  setPassword: password => dispatch(setPasswordActionCreator(password)),\r\n  handleRegister: authInfo => dispatch(handleRegisterActionCreator(authInfo))\r\n});\r\nconst ReduxRegisterPage = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StyledRegisterPage);\r\n\r\nexport default ReduxRegisterPage;\r\n\r\nexport const REGISTER_PAGE_NAME = 'Sign up';\r\n"],"sourceRoot":""}