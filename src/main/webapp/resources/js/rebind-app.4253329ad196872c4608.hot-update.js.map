{"version":3,"sources":["webpack:///./src/pages/auth/RegisterPage.jsx"],"names":["Content","classes","setUsername","setPassword","textField","event","target","value","Buttons","authInfo","handleRegister","styles","button","propTypes","PropTypes","object","isRequired","func","defaultProps","username","password","StyledRegisterPage","withStyles","RegisterPage","mapStateToProps","state","getAuthInfoSelector","mapDispatchToProps","dispatch","setUsernameActionCreator","setPasswordActionCreator","handleRegisterActionCreator","ReduxRegisterPage","connect","REGISTER_PAGE_NAME"],"mappings":"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","file":"rebind-app.4253329ad196872c4608.hot-update.js","sourcesContent":["/* eslint-disable */\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { getAuthInfoSelector } from '../../reducers/rootReducer';\r\nimport { \r\n  setUsernameActionCreator, \r\n  setPasswordActionCreator, \r\n  handleRegisterActionCreator \r\n} from '../../reducers/auth/authActionCreators';\r\nimport styles from './RegisterPageStyles';\r\n/* eslint-enable */\r\n\r\nconst Content = ({\r\n  classes,\r\n  setUsername,\r\n  setPassword\r\n}) => (\r\n<DialogContent>\r\n    <DialogContentText>\r\n      to enhance ReBind\r\n    </DialogContentText>\r\n    <TextField\r\n      color=\"inherit\"\r\n      type=\"email\"\r\n      label=\"Email\"\r\n      placeholder=\"Enter your Email\"\r\n      className={classes.textField}\r\n      onChange={event => setUsername(event.target.value)}\r\n    />\r\n    <br/>\r\n    <TextField\r\n      color=\"inherit\"\r\n      type=\"password\"\r\n      label=\"Password\"\r\n      placeholder=\"Enter your Password\"\r\n      className={classes.textField}\r\n      onChange={event => setPassword(event.target.value)}\r\n    />\r\n    <br/>\r\n</DialogContent>\r\n);\r\nconst Buttons = ({\r\n  authInfo,\r\n  classes,\r\n  handleRegister\r\n}) => (\r\n<DialogActions>\r\n    <Button\r\n      label=\"Submit\"\r\n      style={styles}\r\n      variant=\"button\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n      onClick={() => handleRegister(authInfo)}\r\n    >\r\n      Register\r\n    </Button>\r\n  </DialogActions>\r\n);\r\n\r\n// <div>\r\n// <Navigation />\r\n// <Card className={classes.root}>\r\n//   <TextField\r\n//     color=\"inherit\"\r\n//     type=\"email\"\r\n//     label=\"Email\"\r\n//     placeholder=\"Enter your Email\"\r\n//     className={classes.textField}\r\n//     onChange={event => setUsername(event.target.value)}\r\n//   />\r\n//   <br/>\r\n//   <TextField\r\n//     color=\"inherit\"\r\n//     type=\"password\"\r\n//     label=\"Password\"\r\n//     placeholder=\"Enter your Password\"\r\n//     className={classes.textField}\r\n//     onChange={event => setPassword(event.target.value)}\r\n//   />\r\n//   <br/>\r\n//   <Button\r\n//     label=\"Submit\"\r\n//     style={styles}\r\n//     variant=\"button\"\r\n//     color=\"primary\"\r\n//     className={classes.button}\r\n//     onClick={() => handleRegister(authInfo)}\r\n//   >\r\n//     Register\r\n//   </Button>\r\n// </Card>\r\n// </div>\r\n\r\nContent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  authInfo: PropTypes.object,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  handleRegister: PropTypes.func.isRequired,\r\n};\r\n\r\nContent.defaultProps = {\r\n  authInfo: {\r\n    username: '',\r\n    password: ''\r\n  }\r\n};\r\n\r\nButtons.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  authInfo: PropTypes.object,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  handleRegister: PropTypes.func.isRequired,\r\n};\r\n\r\nconst StyledRegisterPage = withStyles(styles)(RegisterPage);\r\n\r\nconst mapStateToProps = state => ({\r\n  authInfo: getAuthInfoSelector(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUsername: username => dispatch(setUsernameActionCreator(username)),\r\n  setPassword: password => dispatch(setPasswordActionCreator(password)),\r\n  handleRegister: authInfo => dispatch(handleRegisterActionCreator(authInfo))\r\n});\r\nconst ReduxRegisterPage = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StyledRegisterPage);\r\n\r\nexport default ReduxRegisterPage;\r\n\r\nexport const REGISTER_PAGE_NAME = 'Sign up';\r\n"],"sourceRoot":""}