{"version":3,"sources":["webpack:///./src/assets/ux.js"],"names":["REQUIRES_AN","EXCEPTIONS","wordStartsWithOneOf","word","prefixes","filter","prefix","startsWith","length","startsWithVollow","isExceptionToRule","formatRequiredThing","thing","toLowerCase","displayAn","normalizeNameWord","firstLetter","charAt","trim","replace","toUpperCase","formatWrongThing","long","reason","reasonMessage"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA,GAAMA,YAAW,CAAG,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,GAAhB,CAAqB,GAArB,CAA0B,IAA1B,CAApB,CACA,GAAMC,WAAU,CAAG,CAAC,IAAD,CAAnB,CACA,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACC,IAAD,CAAOC,QAAP,QAAoBA,SAAQ,CAACC,MAAT,CAAgB,SAAAC,MAAM,QAAIH,KAAI,CAACI,UAAL,CAAgBD,MAAhB,CAAJ,EAAtB,EAC7CE,MAD6C,CACpC,CADgB,EAA5B,CAEA,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,CAAAN,IAAI,QAAID,oBAAmB,CAACC,IAAD,CAAOH,WAAP,CAAvB,EAA7B,CACA,GAAMU,kBAAiB,CAAG,QAApBA,kBAAoB,CAAAP,IAAI,QAAID,oBAAmB,CAACC,IAAD,CAAOF,UAAP,CAAvB,EAA9B,CACO,GAAMU,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACC,KAAD,CAAW,CAC5C,GAAMT,KAAI,CAAGS,KAAK,CAACC,WAAN,EAAb,CACA,GAAMC,UAAS,CAAGL,gBAAgB,CAACN,IAAD,CAAhB,EAA0B,CAACO,iBAAiB,CAACP,IAAD,CAA9D,CACA,6BAAuBW,SAAS,CAAG,IAAH,CAAU,GAA1C,aAAiDX,IAAjD,EACD,CAJM,CAMP,GAAMY,kBAAiB,CAAG,QAApBA,kBAAoB,CAACZ,IAAD,CAAU,CAClC,GAAMa,YAAW,CAAGJ,KAAK,CAACK,MAAN,CAAa,CAAb,CAApB,CACA,MAAOd,KAAI,CAACe,IAAL,GACJL,WADI,GAEJM,OAFI,CAEIH,WAFJ,CAEiBA,WAAW,CAACI,WAAZ,EAFjB,CAAP,CAGD,CALD,CAMO,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAmB,CAACT,KAAD,CAAQU,IAAR,CAA8B,IAAhBC,OAAgB,2DAAP,EAAO,CAC5D,GAAMP,YAAW,CAAGJ,KAAK,CAACK,MAAN,CAAa,CAAb,CAApB,CACA,GAAMd,KAAI,CAAGS,KAAK,CAACM,IAAN,GAAaL,WAAb,GAA2BM,OAA3B,CAAmCH,WAAnC,CAAgDA,WAAW,CAACI,WAAZ,EAAhD,CAAb,CAGA,GAAMI,cAAa,CAAGD,MAAM,aAAQA,MAAR,EAAmB,EAA/C,CACA,MAAOD,KAAI,eAAUnB,IAAV,wCAA6CqB,aAA7C,YAAkErB,IAAlE,mBAAX,CACD,CAPM,C","file":"rebind-app.e555f95e113162d08ccf.hot-update.js","sourcesContent":["const REQUIRES_AN = ['a', 'e', 'i', 'o', 'u', 'ho'];\r\nconst EXCEPTIONS = ['eu'];\r\nconst wordStartsWithOneOf = (word, prefixes) => prefixes.filter(prefix => word.startsWith(prefix))\r\n  .length > 0;\r\nconst startsWithVollow = word => wordStartsWithOneOf(word, REQUIRES_AN);\r\nconst isExceptionToRule = word => wordStartsWithOneOf(word, EXCEPTIONS);\r\nexport const formatRequiredThing = (thing) => {\r\n  const word = thing.toLowerCase();\r\n  const displayAn = startsWithVollow(word) && !isExceptionToRule(word);\r\n  return `Please enter ${displayAn ? 'an' : 'a'} ${word}`;\r\n};\r\n\r\nconst normalizeNameWord = (word) => {\r\n  const firstLetter = thing.charAt(0);\r\n  return word.trim()\r\n    .toLowerCase()\r\n    .replace(firstLetter, firstLetter.toUpperCase());\r\n};\r\nexport const formatWrongThing = (thing, long, reason = '') => {\r\n  const firstLetter = thing.charAt(0);\r\n  const word = thing.trim().toLowerCase().replace(firstLetter, firstLetter.toUpperCase());\r\n\r\n\r\n  const reasonMessage = reason ? `: ${reason}` : '';\r\n  return long ? `The ${word} you entered seems incorrect${reasonMessage}` : `${word} is not correct`;\r\n};\r\n"],"sourceRoot":""}