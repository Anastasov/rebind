{"version":3,"sources":["webpack:///./src/reducers/auth/authReducer.js","webpack:///./src/reducers/rootReducer.js","webpack:///./src/util/ObjectUtils.js"],"names":["authReducer","state","action","type","payload","REQUEST_REGISTER_PAGE","assign","getAuthInfoSelector","stateAuthInfo","console","log","rootReducer","combineReducers","authInfo","authenticationReducer","object","overrides","Object","stub"],"mappings":";;;;;;;;;;;;;;ymBAGA,GAAMA,YAAW,CAAG,QAAdA,YAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,IAC7BC,KAD6B,CACXD,MADW,CAC7BC,IAD6B,CACvBC,OADuB,CACXF,MADW,CACvBE,OADuB,CAErC,OAAQD,IAAR,EACE,IAAKE,0EAAL,CACA,IAAK,gBAAL,CACA,IAAK,gBAAL,CACE,MAAOC,iEAAM,CAACL,KAAD,kBAAaG,OAAb,EAAb,CACF,QACE,MAAOE,iEAAM,CAACL,KAAD,CAAb,CANJ,CAQD,CAVD,CAYeD,0EAAf,EAEO,GAAMO,oBAAmB,CAAG,QAAtBA,oBAAsB,CAACC,aAAD,CAAmB,CACpD;AACA;AACAC,OAAO,CAACC,GAAR,CAAYF,aAAZ,EACA,MAAOA,cAAP,CACD,CALM,C;;;;;;;;;;;;ACjBP;AAAA;AAAA;AAAA;AAGA,GAAMG,YAAW,CAAGC,6DAAe,CAAC,CAClCC,QAAQ,CAARA,yDADkC,CAAD,CAAnC,CAIA,+DAAeF,WAAf,EAEO,GAAMJ,oBAAmB,CAAG,QAAtBA,oBAAsB,CAAAN,KAAK,QAAIa,sEAAA,CACrBb,KAAK,CAACY,QADe,CAAJ,EAAjC,C;;;;;;;;;;;;ACTP;AAAA;AAAA;AAAO,GAAMP,OAAM,CAAG,QAATA,OAAS,MAACS,OAAD,2DAAU,EAAV,IAAcC,UAAd,2DAA0B,EAA1B,OAAkCC,OAAM,CAACX,MAAP,CAAc,EAAd,CAAkBS,MAAlB,CAA0BC,SAA1B,CAAlC,EAAf,CAEA,GAAME,KAAI,CAAG,QAAPA,KAAO,SAAM,KAAN,EAAb,C","file":"rebind-app.0827be84c8e11eeaeda4.hot-update.js","sourcesContent":["import { assign } from '../../util/ObjectUtils';\r\nimport { REQUEST_REGISTER_PAGE } from './authActionCreators';\r\n\r\nconst authReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case REQUEST_REGISTER_PAGE:\r\n    case 'SHOW_USER_MENU':\r\n    case 'HIDE_USER_MENU':\r\n      return assign(state, { ...payload });\r\n    default:\r\n      return assign(state);\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n\r\nexport const getAuthInfoSelector = (stateAuthInfo) => {\r\n  // do some filtering of state and\r\n  // return new state\r\n  console.log(stateAuthInfo);\r\n  return stateAuthInfo;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport authInfo, * as authenticationReducer from './auth/authReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  authInfo\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport const getAuthInfoSelector = state => authenticationReducer\r\n  .getAuthInfoSelector(state.authInfo);\r\n","export const assign = (object = {}, overrides = {}) => (Object.assign({}, object, overrides));\r\n\r\nexport const stub = () => null;\r\n"],"sourceRoot":""}