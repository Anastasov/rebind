{"version":3,"sources":["webpack:///./src/pages/auth/RegisterPage.jsx"],"names":["PAGE_NAME","ContentSeagment","classes","setUsername","setPassword","textField","event","target","value","propTypes","PropTypes","object","isRequired","func","StyledContent","withStyles","styles","mapStateToContentProps","mapDispatchToContentProps","dispatch","username","setUsernameActionCreator","password","setPasswordActionCreator","Content","connect","ButtonsSeagment","authInfo","handleRegister","Link","button","defaultProps","StyledButtons","mapStateToButtonsProps","state","getAuthInfoSelector","mapDispatchToButtonsProps","handleRegisterActionCreator","Buttons"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAkBA,mBAEO,GAAMA,UAAS,CAAG,SAAlB,CAEP,GAAMC,gBAAe,CAAG,QAAlBA,gBAAkB,UACtBC,QADsB,MACtBA,OADsB,CAEtBC,WAFsB,MAEtBA,WAFsB,CAGtBC,WAHsB,MAGtBA,WAHsB,OAKxB,4DAAC,sEAAD,MACI,2DAAC,0EAAD,0BADJ,CAII,2DAAC,kEAAD,EACE,KAAK,CAAC,SADR,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAC,OAHR,CAIE,WAAW,CAAC,kBAJd,CAKE,SAAS,CAAEF,OAAO,CAACG,SALrB,CAME,QAAQ,CAAE,kBAAAC,KAAK,QAAIH,YAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,EANjB,EAJJ,CAYI,qEAZJ,CAaI,2DAAC,kEAAD,EACE,KAAK,CAAC,SADR,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAC,UAHR,CAIE,WAAW,CAAC,qBAJd,CAKE,SAAS,CAAEN,OAAO,CAACG,SALrB,CAME,QAAQ,CAAE,kBAAAC,KAAK,QAAIF,YAAW,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,EANjB,EAbJ,CAqBI,qEArBJ,CALwB,EAAxB,CA8BAP,eAAe,CAACQ,SAAhB,CAA4B,CAC1BP,OAAO,CAAEQ,iDAAS,CAACC,MAAV,CAAiBC,UADA,CAE1BT,WAAW,CAAEO,iDAAS,CAACG,IAAV,CAAeD,UAFF,CAG1BR,WAAW,CAAEM,iDAAS,CAACG,IAAV,CAAeD,UAHF,CAA5B,CAMA,GAAME,cAAa,CAAGC,2EAAU,CAACC,4DAAD,CAAV,CAAmBf,eAAnB,CAAtB,CACA,GAAMgB,uBAAsB,CAAG,QAAzBA,uBAAyB,SAAO,EAAP,EAA/B,CACA,GAAMC,0BAAyB,CAAG,QAA5BA,0BAA4B,CAAAC,QAAQ,QAAK,CAC7ChB,WAAW,CAAE,qBAAAiB,QAAQ,QAAID,SAAQ,CAACE,mGAAwB,CAACD,QAAD,CAAzB,CAAZ,EADwB,CAE7ChB,WAAW,CAAE,qBAAAkB,QAAQ,QAAIH,SAAQ,CAACI,mGAAwB,CAACD,QAAD,CAAzB,CAAZ,EAFwB,CAAL,EAA1C,CAIO,GAAME,QAAO,CAAGC,2DAAO,CAC5BR,sBAD4B,CAE5BC,yBAF4B,CAAP,CAGrBJ,aAHqB,CAAhB,CAMP,GAAMY,gBAAe,CAAG,QAAlBA,gBAAkB,WACtBC,SADsB,OACtBA,QADsB,CAEtBzB,OAFsB,OAEtBA,OAFsB,CAGtB0B,cAHsB,OAGtBA,cAHsB,OAKtB,4DAAC,sEAAD,MACE,2DAAC,+DAAD,EACE,SAAS,CAAEC,qDADb,CAEE,EAAE,CAAC,GAFL,CAGE,KAAK,CAAC,QAHR,CAIE,KAAK,CAAEb,4DAJT,CAKE,OAAO,CAAC,WALV,CAME,KAAK,CAAC,SANR,CAOE,SAAS,CAAEd,OAAO,CAAC4B,MAPrB,CAQE,OAAO,CAAE,yBAAMF,eAAc,CAACD,QAAD,CAApB,EARX,aADF,CALsB,EAAxB,CAqBAD,eAAe,CAACK,YAAhB,CAA+B,CAC7BJ,QAAQ,CAAE,CACRP,QAAQ,CAAE,EADF,CAERE,QAAQ,CAAE,EAFF,CADmB,CAA/B,CAOAI,eAAe,CAACjB,SAAhB,CAA4B,CAC1BP,OAAO,CAAEQ,iDAAS,CAACC,MAAV,CAAiBC,UADA,CAE1Be,QAAQ,CAAEjB,iDAAS,CAACC,MAFM,CAG1BiB,cAAc,CAAElB,iDAAS,CAACG,IAAV,CAAeD,UAHL,CAA5B,CAMA,GAAMoB,cAAa,CAAGjB,2EAAU,CAACC,4DAAD,CAAV,CAAmBU,eAAnB,CAAtB,CAEA,GAAMO,uBAAsB,CAAG,QAAzBA,uBAAyB,CAAAC,KAAK,QAAK,CACvCP,QAAQ,CAAEQ,kFAAmB,CAACD,KAAD,CADU,CAAL,EAApC,CAGA,GAAME,0BAAyB,CAAG,QAA5BA,0BAA4B,CAAAjB,QAAQ,QAAK,CAC7CS,cAAc,CAAE,wBAAAD,QAAQ,QAAIR,SAAQ,CAACkB,sGAA2B,CAACV,QAAD,CAA5B,CAAZ,EADqB,CAAL,EAA1C,CAIO,GAAMW,QAAO,CAAGb,2DAAO,CAC5BQ,sBAD4B,CAE5BG,yBAF4B,CAAP,CAGrBJ,aAHqB,CAAhB,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,S","file":"rebind-app.a2da1d6a3a46a941355f.hot-update.js","sourcesContent":["/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { getAuthInfoSelector } from '../../reducers/rootReducer';\r\nimport { \r\n  setUsernameActionCreator, \r\n  setPasswordActionCreator, \r\n  handleRegisterActionCreator \r\n} from '../../reducers/auth/authActionCreators';\r\nimport styles from './RegisterPageStyles';\r\n/* eslint-enable */\r\n\r\nexport const PAGE_NAME = 'Sign up';\r\n\r\nconst ContentSeagment = ({\r\n  classes,\r\n  setUsername,\r\n  setPassword\r\n}) => (\r\n<DialogContent>\r\n    <DialogContentText>\r\n      to enhance ReBind\r\n    </DialogContentText>\r\n    <TextField\r\n      color=\"inherit\"\r\n      type=\"email\"\r\n      label=\"Email\"\r\n      placeholder=\"Enter your Email\"\r\n      className={classes.textField}\r\n      onChange={event => setUsername(event.target.value)}\r\n    />\r\n    <br/>\r\n    <TextField\r\n      color=\"inherit\"\r\n      type=\"password\"\r\n      label=\"Password\"\r\n      placeholder=\"Enter your Password\"\r\n      className={classes.textField}\r\n      onChange={event => setPassword(event.target.value)}\r\n    />\r\n    <br/>\r\n</DialogContent>\r\n);\r\n\r\nContentSeagment.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired\r\n};\r\n\r\nconst StyledContent = withStyles(styles)(ContentSeagment);\r\nconst mapStateToContentProps = () => ({});\r\nconst mapDispatchToContentProps = dispatch => ({\r\n  setUsername: username => dispatch(setUsernameActionCreator(username)),\r\n  setPassword: password => dispatch(setPasswordActionCreator(password))\r\n});\r\nexport const Content = connect(\r\n  mapStateToContentProps,\r\n  mapDispatchToContentProps\r\n)(StyledContent);\r\n\r\n\r\nconst ButtonsSeagment = ({\r\n  authInfo,\r\n  classes,\r\n  handleRegister\r\n}) => (\r\n  <DialogActions>\r\n    <Button\r\n      component={Link}\r\n      to=\"/\"\r\n      label=\"Submit\"\r\n      style={styles}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n      onClick={() => handleRegister(authInfo)}\r\n    >\r\n      Register\r\n    </Button>\r\n  </DialogActions>\r\n);\r\n\r\nButtonsSeagment.defaultProps = {\r\n  authInfo: {\r\n    username: '',\r\n    password: ''\r\n  }\r\n};\r\n\r\nButtonsSeagment.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  authInfo: PropTypes.object,\r\n  handleRegister: PropTypes.func.isRequired\r\n};\r\n\r\nconst StyledButtons = withStyles(styles)(ButtonsSeagment);\r\n\r\nconst mapStateToButtonsProps = state => ({\r\n  authInfo: getAuthInfoSelector(state)\r\n});\r\nconst mapDispatchToButtonsProps = dispatch => ({\r\n  handleRegister: authInfo => dispatch(handleRegisterActionCreator(authInfo))\r\n});\r\n\r\nexport const Buttons = connect(\r\n  mapStateToButtonsProps,\r\n  mapDispatchToButtonsProps\r\n)(StyledButtons);\r\n\r\n// <div>\r\n// <Navigation />\r\n// <Card className={classes.root}>\r\n//   <TextField\r\n//     color=\"inherit\"\r\n//     type=\"email\"\r\n//     label=\"Email\"\r\n//     placeholder=\"Enter your Email\"\r\n//     className={classes.textField}\r\n//     onChange={event => setUsername(event.target.value)}\r\n//   />\r\n//   <br/>\r\n//   <TextField\r\n//     color=\"inherit\"\r\n//     type=\"password\"\r\n//     label=\"Password\"\r\n//     placeholder=\"Enter your Password\"\r\n//     className={classes.textField}\r\n//     onChange={event => setPassword(event.target.value)}\r\n//   />\r\n//   <br/>\r\n//   <Button\r\n//     label=\"Submit\"\r\n//     style={styles}\r\n//     variant=\"button\"\r\n//     color=\"primary\"\r\n//     className={classes.button}\r\n//     onClick={() => handleRegister(authInfo)}\r\n//   >\r\n//     Register\r\n//   </Button>\r\n// </Card>\r\n// </div>\r\n"],"sourceRoot":""}