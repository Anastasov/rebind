{"version":3,"sources":["webpack:///./src/components/auth/LoginForm.jsx"],"names":["PAGE_NAME","showError","meta","touched","error","FieldRenderer","input","type","label","placeholder","className","value","onChange","InputProps","passAdornment","showPassword","toggleShowPassword","validate","values","errors","email","formatRequiredThing","isEmailValid","formatWrongThing","password","LoginFormComponent","classes","authInfo","togglePasswordVisibility","handleLogin","openSignUpModal","handleSubmit","submitting","valid","username","textField","endAdornment","isPasswordVisible","styles","button_alternative","button","propTypes","PropTypes","object","isRequired","func","bool","LoginForm","reduxForm","form","StyledLoginForm","withStyles","mapStateToContentProps","state","getAuthInfoSelector","mapDispatchToContentProps","dispatch","isVisible","setPasswordVisibilityActionCreator","userCredentials","Promise","handleLoginActionCreator","openSignUpModalActionCreator","ReduxLoginForm","connect"],"mappings":"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","file":"rebind-app.b4e6c236fa0ebd678bb0.hot-update.js","sourcesContent":["/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Form, Field } from 'redux-form';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Email from '@material-ui/icons/Email';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { getAuthInfoSelector } from '../../reducers/rootReducer';\r\nimport {\r\n  setPasswordVisibilityActionCreator,\r\n  handleLoginActionCreator\r\n} from '../../reducers/auth/authActionCreators';\r\nimport isEmailValid from 'sane-email-validation';\r\nimport { formatRequiredThing, formatWrongThing } from '../../assets/ux';\r\nimport styles from './LoginFormStyles';\r\nimport { openSignUpModalActionCreator } from '../../reducers/modal/modalActionCreators';\r\n/* eslint-enable */\r\n\r\nexport const PAGE_NAME = 'Login';\r\n\r\nconst showError = meta => meta.touched && meta.error;\r\nconst FieldRenderer = ({\r\n  input,\r\n  meta,\r\n  type,\r\n  label,\r\n  placeholder,\r\n  className,\r\n  value,\r\n  onChange,\r\n  InputProps\r\n}) => <TextField\r\n    fullWidth\r\n    color=\"inherit\"\r\n    error={showError(meta)}\r\n    type={type}\r\n    label={showError(meta) ? meta.error : label}\r\n    placeholder={placeholder}\r\n    className={className}\r\n    value={value}\r\n    onChange={onChange}\r\n    InputProps={InputProps}\r\n    {...input}\r\n  />;\r\n\r\nconst passAdornment = (showPassword, toggleShowPassword) => (\r\n<InputAdornment position=\"end\">\r\n  <IconButton\r\n    disableRipple\r\n    aria-label=\"Toggle password visibility\"\r\n    onClick={() => toggleShowPassword(!showPassword)}\r\n  >\r\n    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n  </IconButton>\r\n</InputAdornment>\r\n);\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.email) {\r\n    errors.email = formatRequiredThing('email');\r\n  } else if (!isEmailValid(values.email)) {\r\n    errors.email = formatWrongThing('email', false);\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = formatRequiredThing('password');\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst LoginFormComponent = ({\r\n  classes,\r\n  authInfo,\r\n  togglePasswordVisibility,\r\n  handleLogin,\r\n  openSignUpModal,\r\n  handleSubmit,\r\n  submitting,\r\n  valid\r\n}) => <Form onSubmit={\r\n        handleSubmit(values => handleLogin({\r\n          username: values.email,\r\n          password: values.password\r\n        }))}\r\n      >\r\n    <DialogContent>\r\n      <DialogContentText>\r\n        to continue with ReBind.\r\n      </DialogContentText>\r\n      <br />\r\n      <Field\r\n        name=\"email\"\r\n        type=\"email\"\r\n        label=\"Email\"\r\n        placeholder=\"my-email@mail.com\"\r\n        className={classes.textField}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton disabled>\r\n                <Email />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n        component={FieldRenderer}\r\n      />\r\n      <br />\r\n      <Field\r\n        name=\"password\"\r\n        type={authInfo.isPasswordVisible ? 'text' : 'password'}\r\n        label=\"Password\"\r\n        placeholder=\"mySecretPassowrd\"\r\n        className={classes.textField}\r\n        InputProps={{\r\n          endAdornment: passAdornment(authInfo.isPasswordVisible, togglePasswordVisibility)\r\n        }}\r\n        component={FieldRenderer}\r\n      />\r\n      <br />\r\n    </DialogContent>\r\n    <DialogActions>\r\n    <Button\r\n        disableRipple\r\n        onClick={(() => openSignUpModal())}\r\n        label=\"Go to Sign In\"\r\n        style={styles}\r\n        variant=\"text\"\r\n        color=\"primary\"\r\n        onHover={() => null}\r\n        className={classes.button_alternative}\r\n        disabled={submitting}\r\n      >\r\n        Or, Sign Up\r\n      </Button>\r\n      <Button\r\n        type=\"submit\"\r\n        label=\"Submit\"\r\n        style={styles}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        disabled={!valid || submitting}\r\n      >\r\n        Login\r\n    </Button>\r\n    </DialogActions>\r\n  </Form>;\r\n\r\n\r\nLoginFormComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  authInfo: PropTypes.object.isRequired,\r\n  openSignUpModal: PropTypes.func.isRequired,\r\n  togglePasswordVisibility: PropTypes.func.isRequired,\r\n  handleLogin: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  submitting: PropTypes.bool.isRequired,\r\n  valid: PropTypes.bool.isRequired\r\n};\r\n\r\nconst LoginForm = reduxForm({\r\n  form: 'login',\r\n  validate\r\n})(LoginFormComponent);\r\nconst StyledLoginForm = withStyles(styles)(LoginForm);\r\nconst mapStateToContentProps = state => ({\r\n  authInfo: getAuthInfoSelector(state)\r\n});\r\nconst mapDispatchToContentProps = dispatch => ({\r\n  togglePasswordVisibility: isVisible => dispatch(setPasswordVisibilityActionCreator(isVisible)),\r\n  handleLogin: userCredentials => new Promise(\r\n    () => dispatch(handleLoginActionCreator(userCredentials))\r\n  ),\r\n  openSignUpModal: () => dispatch(openSignUpModalActionCreator())\r\n});\r\nconst ReduxLoginForm = connect(\r\n  mapStateToContentProps,\r\n  mapDispatchToContentProps\r\n)(StyledLoginForm);\r\n\r\nexport default ReduxLoginForm;\r\n"],"sourceRoot":""}