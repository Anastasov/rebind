{"version":3,"sources":["webpack:///./src/pages/auth/RegisterPage.jsx"],"names":["PAGE_NAME","FieldRenderer","input","fullWidth","color","type","label","placeholder","className","value","onChange","InputProps","ContentSeagment","classes","authInfo","setUsername","setPassword","togglePasswordVisibility","textField","username","event","target","endAdornment","isPasswordVisible","password","propTypes","PropTypes","object","isRequired","func","reduxForm","form","withStyles","styles","mapStateToContentProps","state","getAuthInfoSelector","mapDispatchToContentProps","dispatch","setUsernameActionCreator","setPasswordActionCreator","isVisible","setPasswordVisibilityActionCreator","Content","connect","ButtonsSeagment","handleRegister","button","defaultProps","StyledButtons","mapStateToButtonsProps","mapDispatchToButtonsProps","handleRegisterActionCreator","Buttons"],"mappings":"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","file":"rebind-app.f794c1cc1356592a950f.hot-update.js","sourcesContent":["/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Email from '@material-ui/icons/Email';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { getAuthInfoSelector } from '../../reducers/rootReducer';\r\nimport {\r\n  setUsernameActionCreator,\r\n  setPasswordActionCreator,\r\n  setPasswordVisibilityActionCreator,\r\n  handleRegisterActionCreator\r\n} from '../../reducers/auth/authActionCreators';\r\nimport styles from './RegisterPageStyles';\r\n/* eslint-enable */\r\n\r\nexport const PAGE_NAME = 'Sign up';\r\n\r\nconst FieldRenderer = ({\r\n  input,\r\n  fullWidth,\r\n  color,\r\n  type,\r\n  label,\r\n  placeholder,\r\n  className,\r\n  value,\r\n  onChange,\r\n  InputProps\r\n}) => <TextField\r\n    {...input}\r\n    fullWidth={fullWidth}\r\n    color={color}\r\n    type={type}\r\n    label={label}\r\n    placeholder={placeholder}\r\n    className={className}\r\n    value={value}\r\n    onChange={onChange}\r\n    InputProps={InputProps}\r\n  />;\r\n\r\nlet ContentSeagment = ({\r\n  classes,\r\n  authInfo,\r\n  setUsername,\r\n  setPassword,\r\n  togglePasswordVisibility\r\n}) => (\r\n    <DialogContent>\r\n      <DialogContentText>\r\n        to continue with ReBind.\r\n      </DialogContentText>\r\n      <br />\r\n      <form>\r\n      <Field\r\n        name=\"email\"\r\n        fullWidth\r\n        color=\"inherit\"\r\n        type=\"email\"\r\n        label=\"Email\"\r\n        placeholder=\"Enter your Email\"\r\n        className={classes.textField}\r\n        value={authInfo.username}\r\n        onChange={event => setUsername(event.target.value)}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Email />\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n        component={FieldRenderer}\r\n      />\r\n      <br />\r\n      <Field\r\n        name=\"password\"\r\n        fullWidth\r\n        color=\"inherit\"\r\n        type={authInfo.isPasswordVisible ? 'text' : 'password'}\r\n        label=\"Password\"\r\n        placeholder=\"Enter your Password\"\r\n        className={classes.textField}\r\n        value={authInfo.password}\r\n        onChange={event => setPassword(event.target.value)}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"Toggle password visibility\"\r\n                onClick={() => togglePasswordVisibility(!authInfo.isPasswordVisible)}\r\n              >\r\n                {authInfo.isPasswordVisible ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          )\r\n        }}\r\n        component={FieldRenderer}\r\n      />\r\n      </form>\r\n      <br />\r\n    </DialogContent>\r\n);\r\n\r\nContentSeagment.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  authInfo: PropTypes.object.isRequired,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired,\r\n  togglePasswordVisibility: PropTypes.func.isRequired\r\n};\r\n\r\nContentSeagment = reduxForm({\r\n  form: 'register'\r\n})(ContentSeagment);\r\nContentSeagment = withStyles(styles)(ContentSeagment);\r\nconst mapStateToContentProps = state => ({\r\n  authInfo: getAuthInfoSelector(state)\r\n});\r\nconst mapDispatchToContentProps = dispatch => ({\r\n  setUsername: username => dispatch(setUsernameActionCreator(username)),\r\n  setPassword: password => dispatch(setPasswordActionCreator(password)),\r\n  togglePasswordVisibility: isVisible => dispatch(setPasswordVisibilityActionCreator(isVisible))\r\n});\r\nexport const Content = connect(\r\n  mapStateToContentProps,\r\n  mapDispatchToContentProps\r\n)(ContentSeagment);\r\n\r\n\r\nconst ButtonsSeagment = ({\r\n  authInfo,\r\n  classes,\r\n  handleRegister\r\n}) => (\r\n    <DialogActions>\r\n      <Button\r\n        label=\"Submit\"\r\n        style={styles}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={() => handleRegister(authInfo)}\r\n      >\r\n        Register\r\n    </Button>\r\n    </DialogActions>\r\n);\r\n\r\nButtonsSeagment.defaultProps = {\r\n  authInfo: {\r\n    username: '',\r\n    password: ''\r\n  }\r\n};\r\n\r\nButtonsSeagment.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  authInfo: PropTypes.object,\r\n  handleRegister: PropTypes.func.isRequired\r\n};\r\n\r\nconst StyledButtons = withStyles(styles)(ButtonsSeagment);\r\n\r\nconst mapStateToButtonsProps = state => ({\r\n  authInfo: getAuthInfoSelector(state)\r\n});\r\nconst mapDispatchToButtonsProps = dispatch => ({\r\n  handleRegister: authInfo => dispatch(handleRegisterActionCreator(authInfo))\r\n});\r\n\r\nexport const Buttons = connect(\r\n  mapStateToButtonsProps,\r\n  mapDispatchToButtonsProps\r\n)(StyledButtons);\r\n\r\n// <div>\r\n// <Navigation />\r\n// <Card className={classes.root}>\r\n//   <TextField\r\n//     color=\"inherit\"\r\n//     type=\"email\"\r\n//     label=\"Email\"\r\n//     placeholder=\"Enter your Email\"\r\n//     className={classes.textField}\r\n//     onChange={event => setUsername(event.target.value)}\r\n//   />\r\n//   <br/>\r\n//   <TextField\r\n//     color=\"inherit\"\r\n//     type=\"password\"\r\n//     label=\"Password\"\r\n//     placeholder=\"Enter your Password\"\r\n//     className={classes.textField}\r\n//     onChange={event => setPassword(event.target.value)}\r\n//   />\r\n//   <br/>\r\n//   <Button\r\n//     label=\"Submit\"\r\n//     style={styles}\r\n//     variant=\"button\"\r\n//     color=\"primary\"\r\n//     className={classes.button}\r\n//     onClick={() => handleRegister(authInfo)}\r\n//   >\r\n//     Register\r\n//   </Button>\r\n// </Card>\r\n// </div>\r\n"],"sourceRoot":""}