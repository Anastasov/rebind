{"version":3,"sources":["webpack:///./src/components/nav/Navigation.jsx"],"names":["styles","menuTheme","color","ReBind","THEME","palette","primary","main","backgroundColor","contrastText","root","flexGrow","grow","menuButton","marginLeft","marginRight","Navigation","auth","anchorEl","event","setState","target","checked","currentTarget","console","log","props","classes","authInfo","onShowUserMenu","onHideUserMenu","state","open","Boolean","PRESENTABLE_NAME","logged","handleMenu","paper","vertical","horizontal","handleClose","Component","PropTypes","object","isRequired","func","StyledNavigation","withStyles","mapStateToProps","getAuthInfoSelector","mapDispatchToProps","dispatch","showUserMenuActionCreator","hideUserMenuActionCreator","ReduxNavigation","connect","withRouter"],"mappings":"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","file":"rebind-app.557b1739dc30d082921e.hot-update.js","sourcesContent":["/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReBind from \"../../assets/ReBind\";\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { \r\n  showUserMenuActionCreator,\r\n  hideUserMenuActionCreator \r\n} from './actions/navActionsCreators';\r\nimport { getAuthInfoSelector } from '../../reducers/rootReducer';\r\n\r\nconst styles = {\r\n  menuTheme: {\r\n    color: ReBind.THEME.palette.primary.main,\r\n    backgroundColor: ReBind.THEME.palette.primary.contrastText\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n/* eslint-enable */\r\n\r\nclass Navigation extends Component {\r\n      static propTypes = {\r\n        classes: PropTypes.object.isRequired,\r\n        authInfo: PropTypes.object.isRequired,\r\n        onShowUserMenu: PropTypes.func.isRequired\r\n      }\r\n\r\n      state = {\r\n        auth: true,\r\n        anchorEl: null,\r\n      }\r\n\r\n      handleChange = (event) => {\r\n        this.setState({ auth: event.target.checked });\r\n      };\r\n\r\n      handleMenu = (event) => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n      };\r\n\r\n      handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n      };\r\n\r\n      render() {\r\n        console.log('nav props:', this.props);\r\n        const {\r\n classes, authInfo, onShowUserMenu, onHideUserMenu \r\n} = this.props;\r\n        const { auth, anchorEl } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n          <div className={classes.root}>\r\n            <AppBar position=\"fixed\">\r\n              <Toolbar>\r\n                <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"title\" color=\"inherit\" className={classes.grow}>\r\n                    {ReBind.PRESENTABLE_NAME}\r\n                    <div>{`The current state is: ${authInfo.logged}`}</div>\r\n                </Typography>\r\n                {auth && (\r\n                  <div>\r\n                    <IconButton\r\n                      aria-owns={open ? 'menu-appbar' : null}\r\n                      aria-haspopup=\"true\"\r\n                      onClick={(event) => { onShowUserMenu(); this.handleMenu(event); }}\r\n                      color=\"inherit\"\r\n                    >\r\n                      <Link to=\"/test\">\r\n                        <AccountCircle />\r\n                      </Link>\r\n                    </IconButton>\r\n                    <Menu\r\n                      id=\"menu-appbar\"\r\n                      classes={{ paper: classes.menuTheme }}\r\n                      anchorEl={anchorEl}\r\n                      anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                      }}\r\n                      transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                      }}\r\n                      open={open}\r\n                      onClose={this.handleClose}\r\n                    >\r\n                      <MenuItem color=\"inherit\" onClick={this.handleClose}>Profile</MenuItem>\r\n                      <Link to=\"/\">\r\n                        <MenuItem color=\"inherit\" onClick={(event) => { this.handleClose(event); }}>My account</MenuItem>\r\n                      </Link>\r\n                    </Menu>\r\n                  </div>\r\n                )}\r\n              </Toolbar>\r\n            </AppBar>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nconst StyledNavigation = withStyles(styles)(Navigation);\r\n\r\nconst mapStateToProps = state => ({\r\n  authInfo: getAuthInfoSelector(state)\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onShowUserMenu: () => dispatch(showUserMenuActionCreator()),\r\n  onHideUserMenu: () => dispatch(hideUserMenuActionCreator())\r\n});\r\nconst ReduxNavigation = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(StyledNavigation);\r\n\r\nexport default withRouter(ReduxNavigation);\r\n"],"sourceRoot":""}