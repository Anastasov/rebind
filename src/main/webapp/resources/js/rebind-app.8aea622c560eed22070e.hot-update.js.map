{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/InputAdornment/InputAdornment.js","webpack:///./node_modules/@material-ui/core/InputAdornment/index.js","webpack:///./src/pages/auth/RegisterPage.jsx"],"names":["PAGE_NAME","ContentSeagment","classes","setUsername","setPassword","textField","event","target","value","startAdornment","propTypes","PropTypes","object","isRequired","func","StyledContent","withStyles","styles","mapStateToContentProps","mapDispatchToContentProps","dispatch","username","setUsernameActionCreator","password","setPasswordActionCreator","Content","connect","ButtonsSeagment","authInfo","handleRegister","button","defaultProps","StyledButtons","mapStateToButtonsProps","state","getAuthInfoSelector","mapDispatchToButtonsProps","handleRegisterActionCreator","Buttons"],"mappings":"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","file":"rebind-app.8aea622c560eed22070e.hot-update.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _Typography = _interopRequireDefault(require(\"../Typography\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"` */\n  filled: {\n    '&$positionStart': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  }\n};\nexports.styles = styles;\n\nfunction InputAdornment(props) {\n  var _classNames;\n\n  var children = props.children,\n      Component = props.component,\n      classes = props.classes,\n      className = props.className,\n      disableTypography = props.disableTypography,\n      position = props.position,\n      variant = props.variant,\n      other = (0, _objectWithoutProperties2.default)(props, [\"children\", \"component\", \"classes\", \"className\", \"disableTypography\", \"position\", \"variant\"]);\n  return _react.default.createElement(Component, (0, _extends2.default)({\n    className: (0, _classnames.default)(classes.root, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.filled, variant === 'filled'), (0, _defineProperty2.default)(_classNames, classes.positionStart, position === 'start'), (0, _defineProperty2.default)(_classNames, classes.positionEnd, position === 'end'), _classNames), className)\n  }, other), typeof children === 'string' && !disableTypography ? _react.default.createElement(_Typography.default, {\n    color: \"textSecondary\"\n  }, children) : children);\n}\n\nInputAdornment.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: _propTypes.default.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func, _propTypes.default.object]),\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: _propTypes.default.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: _propTypes.default.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   */\n  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])\n} : {};\nInputAdornment.defaultProps = {\n  component: 'div',\n  disableTypography: false\n};\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _InputAdornment.default;\n  }\n});\n\nvar _InputAdornment = _interopRequireDefault(require(\"./InputAdornment\"));","/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { getAuthInfoSelector } from '../../reducers/rootReducer';\r\nimport { \r\n  setUsernameActionCreator, \r\n  setPasswordActionCreator, \r\n  handleRegisterActionCreator \r\n} from '../../reducers/auth/authActionCreators';\r\nimport styles from './RegisterPageStyles';\r\n/* eslint-enable */\r\n\r\nexport const PAGE_NAME = 'Sign up';\r\n\r\nconst ContentSeagment = ({\r\n  classes,\r\n  setUsername,\r\n  setPassword\r\n}) => (\r\n<DialogContent>\r\n    <DialogContentText>\r\n      to continue with ReBind.\r\n    </DialogContentText>\r\n    <br/>\r\n    <TextField\r\n      color=\"inherit\"\r\n      type=\"email\"\r\n      label=\"Email\"\r\n      placeholder=\"Enter your Email\"\r\n      className={classes.textField}\r\n      onChange={event => setUsername(event.target.value)}\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <AccountCircle />\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n    <br/>\r\n    <TextField\r\n      color=\"inherit\"\r\n      type=\"password\"\r\n      label=\"Password\"\r\n      placeholder=\"Enter your Password\"\r\n      className={classes.textField}\r\n      onChange={event => setPassword(event.target.value)}\r\n    />\r\n    <br/>\r\n</DialogContent>\r\n);\r\n\r\nContentSeagment.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  setUsername: PropTypes.func.isRequired,\r\n  setPassword: PropTypes.func.isRequired\r\n};\r\n\r\nconst StyledContent = withStyles(styles)(ContentSeagment);\r\nconst mapStateToContentProps = () => ({});\r\nconst mapDispatchToContentProps = dispatch => ({\r\n  setUsername: username => dispatch(setUsernameActionCreator(username)),\r\n  setPassword: password => dispatch(setPasswordActionCreator(password))\r\n});\r\nexport const Content = connect(\r\n  mapStateToContentProps,\r\n  mapDispatchToContentProps\r\n)(StyledContent);\r\n\r\n\r\nconst ButtonsSeagment = ({\r\n  authInfo,\r\n  classes,\r\n  handleRegister\r\n}) => (\r\n  <DialogActions>\r\n    <Button\r\n      label=\"Submit\"\r\n      style={styles}\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n      onClick={() => handleRegister(authInfo)}\r\n    >\r\n      Register\r\n    </Button>\r\n  </DialogActions>\r\n);\r\n\r\nButtonsSeagment.defaultProps = {\r\n  authInfo: {\r\n    username: '',\r\n    password: ''\r\n  }\r\n};\r\n\r\nButtonsSeagment.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  authInfo: PropTypes.object,\r\n  handleRegister: PropTypes.func.isRequired\r\n};\r\n\r\nconst StyledButtons = withStyles(styles)(ButtonsSeagment);\r\n\r\nconst mapStateToButtonsProps = state => ({\r\n  authInfo: getAuthInfoSelector(state)\r\n});\r\nconst mapDispatchToButtonsProps = dispatch => ({\r\n  handleRegister: authInfo => dispatch(handleRegisterActionCreator(authInfo))\r\n});\r\n\r\nexport const Buttons = connect(\r\n  mapStateToButtonsProps,\r\n  mapDispatchToButtonsProps\r\n)(StyledButtons);\r\n\r\n// <div>\r\n// <Navigation />\r\n// <Card className={classes.root}>\r\n//   <TextField\r\n//     color=\"inherit\"\r\n//     type=\"email\"\r\n//     label=\"Email\"\r\n//     placeholder=\"Enter your Email\"\r\n//     className={classes.textField}\r\n//     onChange={event => setUsername(event.target.value)}\r\n//   />\r\n//   <br/>\r\n//   <TextField\r\n//     color=\"inherit\"\r\n//     type=\"password\"\r\n//     label=\"Password\"\r\n//     placeholder=\"Enter your Password\"\r\n//     className={classes.textField}\r\n//     onChange={event => setPassword(event.target.value)}\r\n//   />\r\n//   <br/>\r\n//   <Button\r\n//     label=\"Submit\"\r\n//     style={styles}\r\n//     variant=\"button\"\r\n//     color=\"primary\"\r\n//     className={classes.button}\r\n//     onClick={() => handleRegister(authInfo)}\r\n//   >\r\n//     Register\r\n//   </Button>\r\n// </Card>\r\n// </div>\r\n"],"sourceRoot":""}